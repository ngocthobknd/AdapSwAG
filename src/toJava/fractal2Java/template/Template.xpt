«IMPORT fractal»
//extends ext
«EXTENSION toJava::fractal2Java::metamodel::Extensions»
//root definition
«DEFINE definition FOR Definition»
	//call template
	«EXPAND component FOREACH getComponentList()-»
«ENDDEFINE»
«DEFINE component FOR Component»
	«IF subComponents.size > 0 »
		«EXPAND component FOREACH subComponents»
	«ELSE»
		«FILE name.toLowerCase()+"/"+name+".java"-»
package «name.toLowerCase()»;		
«EXPAND packageImplementation FOREACH getInterfaceList()-»
import org.apache.felix.ipojo.annotations.*;	
@Component(name="«name»")
//begin the class
public class «name»	«EXPAND implementation FOREACH getInterfaceList()-»
{
		//declare interface
   		«EXPAND interfaceInstance FOREACH getInterfaceList()»
   		«EXPAND attributes FOREACH getAttributeList()»
}
		«ENDFILE-»
	«ENDIF-»
«ENDDEFINE-»
«DEFINE packageImplementation FOR Interface-» 
	«IF this.signature != null -»
		«IF this.role.toString() == "server"-»
import «signature.toLowerCase()».*;
		«ENDIF-»
	«ELSE-»
		«IF this.role.toString() != "server"-»
			«LET this AS thisInterface-»
			«LET this.getComponentOfInterface() AS thisComponent-»
				«IF thisComponent.getDefinition() != null-»
					«LET thisComponent.getDefinition() AS definition-»
						«FOREACH definition.getBindingOfDefinition() AS binding-»
						«IF thisComponent.name == binding.client && thisInterface == binding.clientInterface-»
import «binding.serverInterface.signature.toLowerCase()».*;
						«ENDIF-»	
						«ENDFOREACH-»
					«ENDLET-»
				«ELSEIF thisComponent.getComponentOfComponent() !=null-»
					«LET thisComponent.getComponentOfComponent() AS component_t-»
						«FOREACH component_t.getBinding() AS binding-»
						«IF thisComponent.name == binding.client && thisInterface == binding.clientInterface-»
import «binding.serverInterface.signature.toLowerCase()».*;
						«ENDIF-»	
					«ENDFOREACH-»
					«ENDLET-»
				«ENDIF-»
			«ENDLET-»
			«ENDLET-»
		«ENDIF-»
	«ENDIF-»	
«ENDDEFINE-»
«DEFINE implementation FOR Interface-»
	«IF this.role.toString() == "server"-»	
		«IF this.signature != null -»
implements «this.signature»
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE-»

«DEFINE interfaceInstance FOR Interface-»
	«IF this.signature != null -»
		«IF this.role.toString() == "server"-»
				«FILE signature.toLowerCase()+"/"+this.signature+".java"-»
package «signature.toLowerCase()»;
public interface «this.signature» {
} 
				«ENDFILE-»
		«ELSE-»
			@Requires
			«this.signature» «this.name»;
		«ENDIF-»
	«ELSE-»
		«IF this.role.toString() != "server" -»
			«LET this AS thisInterface-»
			«LET this.getComponentOfInterface() AS thisComponent-»
				«IF thisComponent.getDefinition() != null-»
					«LET thisComponent.getDefinition() AS definition-»
							«FOREACH definition.getBindingOfDefinition() AS binding-»
									«IF thisComponent.name == binding.client && thisInterface == binding.clientInterface-»
	@Requires
	«binding.serverInterface.signature» «thisInterface.name»_«binding.serverInterface.signature.toLowerCase()»;
									«ENDIF-»	
							«ENDFOREACH-»
					«ENDLET-»
				«ELSEIF thisComponent.getComponentOfComponent() !=null-»
					«LET thisComponent.getComponentOfComponent() AS component_t-»
							«FOREACH component_t.getBinding() AS binding-»
								«IF thisComponent.name == binding.client && thisInterface == binding.clientInterface-»
	«binding.serverInterface.signature» «thisInterface.name»_«binding.serverInterface.signature.toLowerCase()»;
								«ENDIF-»	
							«ENDFOREACH-»
					«ENDLET-»
				«ENDIF-»
			«ENDLET-»
			«ENDLET-»
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE-»
«DEFINE attributes FOR Attribute-»
	@Property(name="«this.name»")
	String «this.name»;
«ENDDEFINE-»

